{"version":3,"sources":["Components/AppBar.js","Components/Grid.js","App.js","registerServiceWorker.js","index.js"],"names":["AppBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onSubmit","bind","assertThisInitialized","e","_this2","endpoint","pixaBayApi","encodeURIComponent","refs","input","value","console","log","preventDefault","target","reset","fetch","method","then","d","json","setState","pixaBay","props","handleSubmit","catch","err","error","react_default","a","createElement","className","href","rel","src","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","ref","size","Component","Grid","data","list","map","block","key","largeImageURL","style","maxHeight","pixabayapi","fetchOption","App","loaddata","search","react","Components_AppBar","handleInput","Components_Grid","hits","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c99a2407.chunk.js","sourcesContent":["/**\n * @Author: Ali\n * @Date:   2018-05-09T16:50:40+02:00\n * @Last modified by:   Ali\n * @Last modified time: 2019-01-13T16:30:21+01:00\n */\n\nimport React, { Component } from \"react\";\nclass AppBar extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onSubmit(e) {\n    const pixaBayApi = \"https://pixabay.com/api/?key=\";\n    const API_KEY = \"8804245-155ed4ab1b84647eeb9fbf6ad\";\n    const searchTerm = encodeURIComponent(this.refs.input.value);\n    const endpoint = pixaBayApi + API_KEY + \"&q=\" + searchTerm;\n    console.log(endpoint);\n    const fetchOption = {\n      method: \"GET\"\n    };\n    e.preventDefault();\n    e.target.reset();\n    fetch(endpoint, fetchOption)\n      .then(d => d.json())\n      .then(d => {\n        // setState takes a second parameter , a callback function!\n        this.setState({ pixaBay: d }, () => {\n          this.props.handleSubmit(this.state.pixaBay);\n        });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n  render() {\n    return (\n      <nav className=\"navbar sticky-top navbar-expand-sm navbar-dark bg-dark\">\n        <a\n          className=\"navbar-brand\"\n          href=\"https://pixabay.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src=\"https://pixabay.com/static/img/logo_square.png\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"logo\"\n          />\n          <span> Search PixaBay </span>\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" />\n        <form onSubmit={this.onSubmit} className=\"form-inline my-2 my-sm-0\">\n          <input\n            className=\"form-control mr-sm-4\"\n            type=\"text\"\n            placeholder=\"Search Term e.g: cars, dogs\"\n            aria-label=\"Search\"\n            ref=\"input\"\n            size=\"40\"\n          />\n          <button className=\"btn btn-outline-danger my-2 my-sm-0\" type=\"submit\">\n            Search\n          </button>\n        </form>\n      </nav>\n    );\n  }\n}\nexport default AppBar;\n","/**\n * @Author: Ali\n * @Date:   2018-05-09T21:21:58+02:00\n * @Last modified by:   Ali\n * @Last modified time: 2020-02-17T17:58:33+01:00\n */\n\nimport React, { Component } from \"react\";\n\nclass Grid extends Component {\n  render() {\n    if (!this.props.data) {\n      return <div>loading...</div>;\n    }\n    const list = this.props.data.map(block => (\n      <div key={block.id} className=\"card\">\n        <a href={block.largeImageURL} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img\n            className=\"card-img-top\"\n            src={block.largeImageURL}\n            alt=\"Card\"\n            style={{ width: \"400px\", maxHeight: \"400px\" }}\n          />\n        </a>\n      </div>\n    ));\n    return (\n      <div className=\"grid\">\n        {\" \"}\n        <div className=\"row\">{list}</div>{\" \"}\n      </div>\n    );\n  }\n}\nexport default Grid;\n","/**\n * @Author: Ali\n * @Date:   2018-04-25T22:06:52+02:00\n * @Last modified by:   Ali\n * @Last modified time: 2019-01-12T04:07:10+01:00\n */\n\nimport React, { Component, Fragment } from \"react\";\nimport AppBar from \"./Components/AppBar\";\nimport Grid from \"./Components/Grid\";\n\nimport \"./App.css\";\n\nconst pixabayapi = \"https://pixabay.com/api/?key=\";\nconst API_KEY = \"8804245-155ed4ab1b84647eeb9fbf6ad\";\nconst searchTerm = encodeURIComponent(\"fixthis\");\nconst endpoint = pixabayapi + API_KEY + \"&q=\" + searchTerm;\nconst fetchOption = {\n  method: \"GET\"\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentDidMount() {\n    this.loaddata();\n  }\n  loaddata() {\n    fetch(endpoint, fetchOption)\n      .then(d => d.json())\n      .then(d => {\n        this.setState({ pixaBay: d });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n  handleInput(e) {\n    e.preventDefault();\n    this.setState({ search: e.target.value });\n  }\n  handleSubmit(pixaBay) {\n    this.setState({ pixaBay: pixaBay });\n  }\n  render() {\n    if (!this.state.pixaBay) {\n      return <div className=\"loading\">loading</div>;\n    }\n    return (\n      <Fragment>\n        <div className=\"container-fluid\">\n          <AppBar\n            handleSubmit={this.handleSubmit.bind(this)}\n            handleInput={this.handleInput.bind(this)}\n          />\n          <div className=\"row\">\n            {\" \"}\n            <Grid data={this.state.pixaBay.hits} />{\" \"}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * @Author: Ali\n * @Date:   2018-04-28T14:51:10+02:00\n * @Last modified by:   Ali\n * @Last modified time: 2019-01-07T12:53:58+01:00\n */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}